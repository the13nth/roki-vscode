{
  "name": "ai-project-manager",
  "displayName": "ROKI Project Manager",
  "description": "Intelligent project management with AI context injection",
  "version": "0.0.5",
  "publisher": "ai-project-manager",
  "repository": {
    "type": "git",
    "url": "https://github.com/the13nth/roki-vscode.git"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
          "contributes": {
            "customEditors": [
                {
                    "viewType": "aiProjectManager.taskDocument",
                    "displayName": "AI Project Manager - Task Editor",
                    "selector": [
                        {
                            "filenamePattern": "**/tasks.md"
                        },
                        {
                            "filenamePattern": "**/*tasks*.md"
                        }
                    ],
                    "priority": "default"
                }
            ],
            "commands": [
      {
        "command": "aiProjectManager.injectContext",
        "title": "AI Project Manager: Inject Context",
        "icon": "$(robot)"
      },
      {
        "command": "aiProjectManager.detectProject",
        "title": "AI Project Manager: Detect Project",
        "icon": "$(search)"
      },
      {
        "command": "aiProjectManager.connectToDashboard",
        "title": "AI Project Manager: Connect to Dashboard",
        "icon": "$(link)"
      },
      {
        "command": "aiProjectManager.toggleAutoInject",
        "title": "AI Project Manager: Toggle Auto-Inject",
        "icon": "$(settings-gear)"
      },
      {
        "command": "aiProjectManager.openContextPreferences",
        "title": "AI Project Manager: Context Preferences",
        "icon": "$(settings)"
      },
      {
        "command": "aiProjectManager.autoInjectContext",
        "title": "AI Project Manager: Auto-Inject Context",
        "icon": "$(zap)"
      },
      {
        "command": "aiProjectManager.refreshSidebar",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "aiProjectManager.forceRefresh",
        "title": "AI Project Manager: Force Refresh",
        "icon": "$(sync)"
      },
      {
        "command": "aiProjectManager.openDocument",
        "title": "Open Document",
        "icon": "$(go-to-file)"
      },
      {
        "command": "aiProjectManager.setSyncStatus",
        "title": "Set Sync Status"
      },
      {
        "command": "aiProjectManager.showSidebar",
        "title": "AI Project Manager: Show Sidebar",
        "icon": "$(sidebar-expand)"
      },
      {
        "command": "aiProjectManager.createProject",
        "title": "AI Project Manager: Create New Project",
        "icon": "$(add)"
      },
      {
        "command": "aiProjectManager.validateProject",
        "title": "AI Project Manager: Validate Project",
        "icon": "$(check)"
      },
      {
        "command": "aiProjectManager.repairProject",
        "title": "AI Project Manager: Repair Project",
        "icon": "$(tools)"
      },
      {
        "command": "aiProjectManager.updateProjectUserInfo",
        "title": "AI Project Manager: Update Project User Info",
        "icon": "$(account)"
      },
      {
        "command": "aiProjectManager.login",
        "title": "AI Project Manager: Login",
        "icon": "$(sign-in)"
      },
      {
        "command": "aiProjectManager.logout",
        "title": "AI Project Manager: Logout",
        "icon": "$(sign-out)"
      },
      {
        "command": "aiProjectManager.loadProject",
        "title": "AI Project Manager: Load Project from Cloud",
        "icon": "$(cloud-download)"
      },
      {
        "command": "aiProjectManager.listProjects",
        "title": "AI Project Manager: List My Projects",
        "icon": "$(list-unordered)"
      },
      {
        "command": "aiProjectManager.checkToken",
        "title": "AI Project Manager: Check Token",
        "icon": "$(check)"
      },
      {
        "command": "aiProjectManager.openAuthSettings",
        "title": "AI Project Manager: Open Browser to Login",
        "icon": "$(globe)"
      },
              {
          "command": "aiProjectManager.enterToken",
          "title": "AI Project Manager: Enter Token",
          "icon": "$(key)"
        },
        {
          "command": "aiProjectManager.updateProjectState",
          "title": "AI Project Manager: Update Project State",
          "icon": "$(sync)"
        },
        {
          "command": "aiProjectManager.refreshCloudProgress",
          "title": "AI Project Manager: Refresh Cloud Progress",
          "icon": "$(refresh)"
        },
        {
          "command": "aiProjectManager.openTaskEditor",
          "title": "AI Project Manager: Open Task Editor",
          "icon": "$(tasklist)"
        }
    ],
    "configuration": {
      "title": "AI Project Manager",
      "properties": {
        "aiProjectManager.autoInject": {
          "type": "boolean",
          "default": true,
          "description": "Automatically inject context when AI chat is detected"
        },
        "aiProjectManager.maxContextSize": {
          "type": "number",
          "default": 8000,
          "minimum": 1000,
          "description": "Maximum context size in characters"
        },
        "aiProjectManager.prioritizeRecent": {
          "type": "boolean",
          "default": true,
          "description": "Prioritize recently modified context documents"
        },
        "aiProjectManager.includeProgress": {
          "type": "boolean",
          "default": true,
          "description": "Include progress summary in context"
        },
        "aiProjectManager.includeCurrentTask": {
          "type": "boolean",
          "default": true,
          "description": "Include current task in context"
        },
        "aiProjectManager.customPromptPrefix": {
          "type": "string",
          "default": "",
          "description": "Custom prefix to add to AI context prompts"
        },
        "aiProjectManager.dashboardUrl": {
          "type": "string",
          "default": "http://localhost:3000",
          "description": "URL of the AI Project Manager dashboard"
        },
        "aiProjectManager.authToken": {
          "type": "string",
          "default": "",
          "description": "Authentication token for AI Project Manager dashboard (get from browser login)",
          "scope": "application"
        },
        "aiProjectManager.userId": {
          "type": "string",
          "default": "",
          "description": "User ID for AI Project Manager (auto-filled after token verification)",
          "scope": "application"
        },
        "aiProjectManager.userEmail": {
          "type": "string",
          "default": "",
          "description": "User email for AI Project Manager (auto-filled after token verification)",
          "scope": "application"
        },
        "aiProjectManager.userName": {
          "type": "string",
          "default": "",
          "description": "User name for AI Project Manager (auto-filled after token verification)",
          "scope": "application"
        }
              }
      },
    "views": {
      "aiProjectManager": [
        {
          "id": "aiProjectManagerSidebar",
          "name": "AI Project Manager"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "aiProjectManager",
          "title": "AI Project Manager",
          "icon": "$(robot)"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "aiProjectManager.refreshSidebar",
          "when": "view == aiProjectManagerSidebar",
          "group": "navigation"
        },
        {
          "command": "aiProjectManager.connectToDashboard",
          "when": "view == aiProjectManagerSidebar",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "aiProjectManager.openDocument",
          "when": "view == aiProjectManagerSidebar && viewItem == document",
          "group": "inline"
        },
        {
          "command": "aiProjectManager.injectContext",
          "when": "view == aiProjectManagerSidebar && viewItem == contextAction",
          "group": "inline"
        },
        {
          "command": "aiProjectManager.updateProjectState",
          "when": "view == aiProjectManagerSidebar",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "aiProjectManager.injectContext",
          "when": "true"
        },
        {
          "command": "aiProjectManager.detectProject",
          "when": "true"
        },
        {
          "command": "aiProjectManager.connectToDashboard",
          "when": "true"
        },
        {
          "command": "aiProjectManager.toggleAutoInject",
          "when": "true"
        },
        {
          "command": "aiProjectManager.openContextPreferences",
          "when": "true"
        },
        {
          "command": "aiProjectManager.autoInjectContext",
          "when": "true"
        },
        {
          "command": "aiProjectManager.refreshSidebar",
          "when": "false"
        },
        {
          "command": "aiProjectManager.forceRefresh",
          "when": "true"
        },
        {
          "command": "aiProjectManager.openDocument",
          "when": "false"
        },
        {
          "command": "aiProjectManager.setSyncStatus",
          "when": "false"
        },
        {
          "command": "aiProjectManager.showSidebar",
          "when": "true"
        },
        {
          "command": "aiProjectManager.createProject",
          "when": "true"
        },
        {
          "command": "aiProjectManager.validateProject",
          "when": "true"
        },
        {
          "command": "aiProjectManager.repairProject",
          "when": "true"
        },
        {
          "command": "aiProjectManager.updateProjectUserInfo",
          "when": "true"
        },
        {
          "command": "aiProjectManager.login",
          "when": "true"
        },
        {
          "command": "aiProjectManager.logout",
          "when": "true"
        },
        {
          "command": "aiProjectManager.loadProject",
          "when": "true"
        },
        {
          "command": "aiProjectManager.listProjects",
          "when": "true"
        },
        {
          "command": "aiProjectManager.checkToken",
          "when": "true"
        },
        {
          "command": "aiProjectManager.openAuthSettings",
          "when": "true"
        },
        {
          "command": "aiProjectManager.enterToken",
          "when": "true"
        },
        {
          "command": "aiProjectManager.updateProjectState",
          "when": "true"
        },
        {
          "command": "aiProjectManager.refreshCloudProgress",
          "when": "true"
        },
        {
          "command": "aiProjectManager.openTaskEditor",
          "when": "true"
        }
      ]
    },
    "keybindings": [
      {
        "command": "aiProjectManager.injectContext",
        "key": "ctrl+alt+i",
        "mac": "cmd+alt+i",
        "when": "editorTextFocus"
      },
      {
        "command": "aiProjectManager.autoInjectContext",
        "key": "ctrl+alt+shift+i",
        "mac": "cmd+alt+shift+i",
        "when": "editorTextFocus"
      },
      {
        "command": "aiProjectManager.updateProjectState",
        "key": "ctrl+alt+u",
        "mac": "cmd+alt+u",
        "when": "editorTextFocus"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "npx vsce package"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^3.6.0",
    "typescript": "^5.3.0",
    "vsce": "^1.103.1"
  },
  "dependencies": {
    "chokidar": "^3.5.3"
  }
}
